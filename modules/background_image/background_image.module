<?php

/**
 * @file
 * Background Image module's procedural hooks and functions.
 */

use Drupal\background_image\BackgroundImageInterface;
use Drupal\background_image\BackgroundImageManager;
use Drupal\background_image\Form\BackgroundImageForm;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Extension\Extension;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_cache_flush().
 */
function background_image_cache_flush() {
  BackgroundImageManager::service()->cacheFlush();
}

/**
 * Implements hook_module_implements_alter().
 *
 * {@inheritdoc}
 */
function background_image_module_implements_alter(&$implementations, $hook) {
  if (($hook == 'tokens_alter' || $hook == 'token_info_alter') && isset($implementations['background_image'])) {
    $group = $implementations['background_image'];
    unset($implementations['background_image']);
    $implementations['background_image'] = $group;
  }
}

/**
 * Implements hook_entity_delete().
 *
 * {@inheritdoc}
 */
function background_image_entity_delete(EntityInterface $entity) {
  if ($background_image = BackgroundImageManager::service()->getEntityBackgroundImage($entity)) {
    $background_image->delete();
  }
}

/**
 * Implements hook_entity_prepare_form().
 *
 * {@inheritdoc}
 */
function background_image_entity_prepare_form(EntityInterface $entity, $operation, FormStateInterface $form_state) {
  BackgroundImageManager::service()->prepareEntityForm($entity, $operation, $form_state);
}

/**
 * Implements hook_form_alter().
 *
 * {@inheritdoc}
 */
function background_image_form_alter(array &$form, FormStateInterface $form_state) {
  BackgroundImageManager::service()->alterEntityForm($form, $form_state);
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 *
 * {@inheritdoc}
 */
function background_image_inline_entity_form_entity_form_alter(&$entity_form, FormStateInterface $form_state) {
  $entity = $entity_form['#entity'];
  if ($entity instanceof BackgroundImageInterface) {
    BackgroundImageForm::create($entity, $form_state->getCompleteForm(), $form_state, $entity_form)->build();
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * {@inheritdoc}
 */
function background_image_preprocess_region__background_image(&$variables) {
  $variables['base_class'] = BackgroundImageManager::service()->getBaseClass();
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * {@inheritdoc}
 */
function background_image_preprocess_html(&$variables) {
  $manager = BackgroundImageManager::service();
  if ($background_image = $manager->getBackgroundImage()) {
    $base_class = $manager->getBaseClass();
    if ($background_image->getSetting('dark')) {
      $variables['attributes']['class'][] = "$base_class-dark";
    }
    if ($background_image->getSetting('full_viewport')) {
      $variables['attributes']['class'][] = "$base_class-full-viewport";
    }
  }
  $variables['#cache']['context'][] = 'background_image.settings.dark';
  $variables['#cache']['context'][] = 'background_image.settings.full_viewport';
}


/**
 * Implements hook_system_info_alter().
 *
 * {@inheritdoc}
 */
function background_image_system_info_alter(&$info, Extension $file, $type) {
  // Inject a "Background Image" region for all themes.
  if ($type == 'theme') {
    $info['regions'] = ['background_image' => 'Background Image'] + $info['regions'];
  }
}

/**
 * Implements hook_theme().
 *
 * {@inheritdoc}
 */
function background_image_theme($existing, $type, $theme, $path) {
  $module_path = drupal_get_path('module', 'background_image');
  $hooks['container__background_image'] = [
    'base hook' => 'container',
    'path' => "$module_path/templates",
    'type' => 'module',
  ];
  $hooks['region__background_image'] = [
    'base hook' => 'region',
    'path' => "$module_path/templates",
    'type' => 'module',
  ];
  return $hooks;
}
